package queryparamdata

type CloudTrailResourceType string

type AWSResourceToCloudTrailResource map[string]CloudTrailResourceType

// NewAWSResourceToCloudTrailLookup returns a new instance of AWSResourceToCloudTrailResource.
func NewAWSResourceToCloudTrailLookup() AWSResourceToCloudTrailResource {
	return AWSResourceToCloudTrailResource{
		"aws_accessanalyzer_analyzer":             "AWS::AccessAnalyzer::Analyzer",
		"aws_lb":                                  "AWS::ElasticLoadBalancingV2::LoadBalancer",
		"aws_lb_listener":                         "AWS::ElasticLoadBalancingV2::Listener",
		"aws_lb_listener_certificate":             "AWS::ElasticLoadBalancingV2::ListenerCertificate",
		"aws_lb_listener_rule":                    "AWS::ElasticLoadBalancingV2::ListenerRule",
		"aws_lb_target_group":                     "AWS::ElasticLoadBalancingV2::TargetGroup",
		"aws_lb_target_group_attachment":          "AWS::ElasticLoadBalancingV2::TargetGroupAttachment",
		"aws_acm_certificate":                     "AWS::CertificateManager::Certificate",
		"aws_acm_certificate_validation":          "AWS::CertificateManager::CertificateValidation",
		"aws_acm_certificate_authority":           "AWS::ACMPCA::CertificateAuthority",
		"aws_api_gateway_authorizer":              "AWS::ApiGateway::Authorizer",
		"aws_api_gateway_api_key":                 "AWS::ApiGateway::ApiKey",
		"aws_api_gateway_documentation_part":      "AWS::ApiGateway::DocumentationPart",
		"aws_api_gateway_gateway_response":        "AWS::ApiGateway::GatewayResponse",
		"aws_api_gateway_integration":             "AWS::ApiGateway::Integration",
		"aws_api_gateway_integration_response":    "AWS::ApiGateway::IntegrationResponse",
		"aws_api_gateway_method":                  "AWS::ApiGateway::Method",
		"aws_api_gateway_method_response":         "AWS::ApiGateway::MethodResponse",
		"aws_api_gateway_model":                   "AWS::ApiGateway::Model",
		"aws_api_gateway_resource":                "AWS::ApiGateway::Resource",
		"aws_api_gateway_rest_api":                "AWS::ApiGateway::RestApi",
		"aws_api_gateway_stage":                   "AWS::ApiGateway::Stage",
		"aws_api_gateway_usage_plan":              "AWS::ApiGateway::UsagePlan",
		"aws_api_gateway_vpc_link":                "AWS::ApiGateway::VpcLink",
		"aws_appsync_graphql_api":                 "AWS::AppSync::GraphQLApi",
		"aws_auto_scaling_group":                  "AWS::AutoScaling::AutoScalingGroup",
		"aws_auto_scaling_launch_configuration":   "AWS::AutoScaling::LaunchConfiguration",
		"aws_launch_template":                     "AWS::EC2::LaunchTemplate",
		"aws_batch_compute_environment":           "AWS::Batch::ComputeEnvironment",
		"aws_batch_job_definition":                "AWS::Batch::JobDefinition",
		"aws_batch_job_queue":                     "AWS::Batch::JobQueue",
		"aws_budgets_budget":                      "AWS::Budgets::Budget",
		"aws_cloud9_environment_ec2":              "AWS::Cloud9::EnvironmentEC2",
		"aws_cloudformation_stack":                "AWS::CloudFormation::Stack",
		"aws_cloudformation_stack_set":            "AWS::CloudFormation::StackSet",
		"aws_cloudformation_stack_set_instance":   "AWS::CloudFormation::StackSetInstance",
		"aws_cloudfront_distribution":             "AWS::CloudFront::Distribution",
		"aws_cloudfront_cache_policy":             "AWS::CloudFront::CachePolicy",
		"aws_cloudhsms_v2_cluster":                "AWS::CloudHSMV2::Cluster",
		"aws_cloudhsm_v2_hsm":                     "AWS::CloudHSMV2::Hsm",
		"aws_cloudtrail_trail":                    "AWS::CloudTrail::Trail",
		"aws_cloudwatch_dashboard":                "AWS::CloudWatch::Dashboard",
		"aws_cloudwatch_event_rule":               "AWS::Events::Rule",
		"aws_cloudwatch_event_target":             "AWS::Events::Target",
		"aws_cloudwatch_log_group":                "AWS::Logs::LogGroup",
		"aws_cloudwatch_metric_alarm":             "AWS::CloudWatch::Alarm",
		"aws_codebuild_project":                   "AWS::CodeBuild::Project",
		"aws_codecommit_repository":               "AWS::CodeCommit::Repository",
		"aws_codedeploy_app":                      "AWS::CodeDeploy::Application",
		"aws_codepipeline_pipeline":               "AWS::CodePipeline::Pipeline",
		"aws_codepipeline_webhook":                "AWS::CodePipeline::Webhook",
		"aws_cognito_identity_pool":               "AWS::Cognito::IdentityPool",
		"aws_cognito_user_pool":                   "AWS::Cognito::UserPool",
		"aws_config_config_rule":                  "AWS::Config::ConfigRule",
		"aws_config_configuration_aggregator":     "AWS::Config::ConfigurationAggregator",
		"aws_config_configuration_recorder":       "AWS::Config::ConfigurationRecorder",
		"aws_config_delivery_channel":             "AWS::Config::DeliveryChannel",
		"aws_customer_gateway":                    "AWS::EC2::CustomerGateway",
		"aws_datapipeline_pipeline":               "AWS::DataPipeline::Pipeline",
		"aws_devicefarm_project":                  "AWS::DeviceFarm::Project",
		"aws_docdb_cluster":                       "AWS::DocDB::DBCluster",
		"aws_docdb_cluster_instance":              "AWS::DocDB::DBInstance",
		"aws_docdb_cluster_parameter_group":       "AWS::DocDB::DBClusterParameterGroup",
		"aws_docdb_subnet_group":                  "AWS::DocDB::DBSubnetGroup",
		"aws_dynamodb_table":                      "AWS::DynamoDB::Table",
		"aws_ebs_volume":                          "AWS::EC2::Volume",
		"aws_volume_attachment":                   "AWS::EC2::VolumeAttachment",
		"aws_instance":                            "AWS::EC2::Instance",
		"aws_ecr_lifecycle_policy":                "AWS::ECR::LifecyclePolicy",
		"aws_ecr_repository":                      "AWS::ECR::Repository",
		"aws_ecr_repository_policy":               "AWS::ECR::RepositoryPolicy",
		"aws_ecrpublic_repository":                "AWS::ECRPUBLIC::Repository",
		"aws_ecs_cluster":                         "AWS::ECS::Cluster",
		"aws_ecs_service":                         "AWS::ECS::Service",
		"aws_ecs_task_definition":                 "AWS::ECS::TaskDefinition",
		"aws_efs_access_point":                    "AWS::EFS::AccessPoint",
		"aws_efs_file_system":                     "AWS::EFS::FileSystem",
		"aws_efs_file_system_policy":              "AWS::EFS::FileSystemPolicy",
		"aws_efs_mount_target":                    "AWS::EFS::MountTarget",
		"aws_eip":                                 "AWS::EC2::EIP",
		"aws_eks_cluster":                         "AWS::EKS::Cluster",
		"aws_eks_node_group":                      "AWS::EKS::Nodegroup",
		"aws_elasticache_cluster":                 "AWS::ElastiCache::CacheCluster",
		"aws_elasticache_parameter_group":         "AWS::ElastiCache::ParameterGroup",
		"aws_elasticache_subnet_group":            "AWS::ElastiCache::SubnetGroup",
		"aws_elasticache_replication_group":       "AWS::ElastiCache::ReplicationGroup",
		"aws_elastic_beanstalk_application":       "AWS::ElasticBeanstalk::Application",
		"aws_elastic_beanstalk_environment":       "AWS::ElasticBeanstalk::Environment",
		"aws_elb":                                 "AWS::ElasticLoadBalancing::LoadBalancer",
		"aws_emr_cluster":                         "AWS::EMR::Cluster",
		"aws_emr_instance_group_config":           "AWS::EMR::InstanceGroupConfig",
		"aws_emr_security_configuration":          "AWS::EMR::SecurityConfiguration",
		"aws_network_interface":                   "AWS::EC2::NetworkInterface",
		"aws_elasticsearch_domain":                "AWS::Elasticsearch::Domain",
		"aws_kinesis_firehose_delivery_stream":    "AWS::KinesisFirehose::DeliveryStream",
		"aws_kinesis_stream":                      "AWS::Kinesis::Stream",
		"aws_glue_catalog_database":               "AWS::Glue::Database",
		"aws_glue_catalog_table":                  "AWS::Glue::Table",
		"aws_glue_crawler":                        "AWS::Glue::Crawler",
		"aws_glue_connection":                     "AWS::Glue::Connection",
		"aws_glue_job":                            "AWS::Glue::Job",
		"aws_glue_security_configuration":         "AWS::Glue::SecurityConfiguration",
		"aws_glue_trigger":                        "AWS::Glue::Trigger",
		"aws_iam_access_key":                      "AWS::IAM::AccessKey",
		"aws_iam_group":                           "AWS::IAM::Group",
		"aws_iam_group_policy":                    "AWS::IAM::GroupPolicy",
		"aws_iam_policy_attachment":               "AWS::IAM::PolicyAttachment",
		"aws_iam_instance_profile":                "AWS::IAM::InstanceProfile",
		"aws_iam_policy":                          "AWS::IAM::Policy",
		"aws_iam_role":                            "AWS::IAM::Role",
		"aws_iam_role_policy":                     "AWS::IAM::RolePolicy",
		"aws_iam_role_policy_attachment":          "AWS::IAM::RolePolicyAttachment",
		"aws_iam_user":                            "AWS::IAM::User",
		"aws_iam_user_group_membership":           "AWS::IAM::UserToGroupAddition",
		"aws_iam_user_policy":                     "AWS::IAM::UserPolicy",
		"aws_iam_user_policy_attachment":          "AWS::IAM::UserPolicyAttachment",
		"aws_iam_openid_connect_provider":         "AWS::IAM::OpenIDConnectProvider",
		"aws_internet_gateway":                    "AWS::EC2::InternetGateway",
		"aws_iot_thing":                           "AWS::IoT::Thing",
		"aws_iot_thing_type":                      "AWS::IoT::ThingType",
		"aws_iot_topic_rule":                      "AWS::IoT::TopicRule",
		"aws_iot_role_alias":                      "AWS::IoT::RoleAlias",
		"aws_iot_certificate":                     "AWS::IoT::Certificate",
		"aws_kms_alias":                           "AWS::KMS::Alias",
		"aws_kms_external_key":                    "AWS::KMS::ExternalKey",
		"aws_kms_key":                             "AWS::KMS::Key",
		"aws_kms_grant":                           "AWS::KMS::Grant",
		"aws_lambda_event_source_mapping":         "AWS::Lambda::EventSourceMapping",
		"aws_lambda_function":                     "AWS::Lambda::Function",
		"aws_lambda_function_event_invoke_config": "AWS::Lambda::EventInvokeConfig",
		"aws_lambda_layer_version":                "AWS::Lambda::LayerVersion",
		"aws_lambda_permission":                   "AWS::Lambda::Permission",
		"aws_media_package_channel":               "AWS::MediaPackage::Channel",
		"aws_media_store_container":               "AWS::MediaStore::Container",
		"aws_medialive_channel":                   "AWS::MediaLive::Channel",
		"aws_medialive_input":                     "AWS::MediaLive::Input",
		"aws_medialive_input_security_group":      "AWS::MediaLive::InputSecurityGroup",
		"aws_msk_cluster":                         "AWS::MSK::Cluster",
		"aws_network_acl":                         "AWS::EC2::NetworkAcl",
		"aws_nat_gateway":                         "AWS::EC2::NatGateway",
		"aws_neptune_cluster":                     "AWS::Neptune::DBCluster",
		"aws_opsworks_application":                "AWS::OpsWorks::App",
		"aws_opsworks_custom_layer":               "AWS::OpsWorks::Layer",
		"aws_opsworks_ganglia_layer":              "AWS::OpsWorks::Layer",
		"aws_opsworks_instance":                   "AWS::OpsWorks::Instance",
		"aws_opsworks_java_app_layer":             "AWS::OpsWorks::Layer",
		"aws_opsworks_memcached_layer":            "AWS::OpsWorks::Layer",
		"aws_opsworks_mysql_layer":                "AWS::OpsWorks::Layer",
		"aws_opsworks_nodejs_app_layer":           "AWS::OpsWorks::Layer",
		"aws_opsworks_php_app_layer":              "AWS::OpsWorks::Layer",
		"aws_opsworks_rails_app_layer":            "AWS::OpsWorks::Layer",
		"aws_opsworks_rds_db_instance":            "AWS::OpsWorks::RdsDbInstance",
		"aws_opsworks_stack":                      "AWS::OpsWorks::Stack",
		"aws_opsworks_static_web_layer":           "AWS::OpsWorks::Layer",
		"aws_opsworks_user_profile":               "AWS::OpsWorks::UserProfile",
		"aws_organizations_account":               "AWS::Organizations::Account",
		"aws_organizations_organization":          "AWS::Organizations::Organization",
		"aws_organizations_organizational_unit":   "AWS::Organizations::OrganizationalUnit",
		"aws_organizations_policy":                "AWS::Organizations::Policy",
		"aws_organizations_policy_attachment":     "AWS::Organizations::PolicyAttachment",
		"aws_qldb_ledger":                         "AWS::QLDB::Ledger",
		"aws_db_instance":                         "AWS::RDS::DBInstance",
		"aws_db_proxy":                            "AWS::RDS::DBProxy",
		"aws_db_cluster":                          "AWS::RDS::DBCluster",
		"aws_db_cluster_snapshot":                 "AWS::RDS::DBClusterSnapshot",
		"aws_db_parameter_group":                  "AWS::RDS::DBParameterGroup",
		"aws_db_snapshot":                         "AWS::RDS::DBSnapshot",
		"aws_db_subnet_group":                     "AWS::RDS::DBSubnetGroup",
		"aws_db_option_group":                     "AWS::RDS::OptionGroup",
		"aws_db_event_subscription":               "AWS::RDS::EventSubscription",
		"aws_rds_global_cluster":                  "AWS::RDS::GlobalCluster",
		"aws_resourcegroups_group":                "AWS::ResourceGroups::Group",
		"aws_route53_health_check":                "AWS::Route53::HealthCheck",
		"aws_route53_query_log":                   "AWS::Route53::QueryLoggingConfig",
		"aws_route53_record":                      "AWS::Route53::RecordSet",
		"aws_route53_zone":                        "AWS::Route53::HostedZone",
		"aws_route_table":                         "AWS::EC2::RouteTable",
		"aws_main_route_table_association":        "AWS::EC2::SubnetRouteTableAssociation",
		"aws_route_table_association":             "AWS::EC2::SubnetRouteTableAssociation",
		"aws_s3_bucket":                           "AWS::S3::Bucket",
		"aws_secretsmanager_secret":               "AWS::SecretsManager::Secret",
		"aws_secretsmanager_secret_version":       "AWS::SecretsManager::SecretVersion",
		"aws_securityhub_account":                 "AWS::SecurityHub::Account",
		"aws_securityhub_member":                  "AWS::SecurityHub::Member",
		"aws_securityhub_standards_subscription":  "AWS::SecurityHub::StandardsSubscription",
		"aws_securityhub_product_subscription":    "AWS::SecurityHub::ProductSubscription",
		"aws_servicecatalog_portfolio":            "AWS::ServiceCatalog::Portfolio",
		"aws_ses_configuration_set":               "AWS::SES::ConfigurationSet",
		"aws_ses_domain_identity":                 "AWS::SES::Identity",
		"aws_ses_domain_identity_verification":    "AWS::SES::IdentityVerification",
		"aws_ses_email_identity":                  "AWS::SES::EmailIdentity",
		"aws_ses_receipt_filter":                  "AWS::SES::ReceiptFilter",
		"aws_ses_receipt_rule":                    "AWS::SES::ReceiptRule",
		"aws_ses_receipt_rule_set":                "AWS::SES::ReceiptRuleSet",
		"aws_ses_template":                        "AWS::SES::Template",
		"aws_sfn_activity":                        "AWS::StepFunctions::Activity",
		"aws_sfn_state_machine":                   "AWS::StepFunctions::StateMachine",
		"aws_security_group":                      "AWS::EC2::SecurityGroup",
		"aws_security_group_rule":                 "AWS::EC2::SecurityGroupEgress",
		"aws_sns_topic":                           "AWS::SNS::Topic",
		"aws_sns_topic_subscription":              "AWS::SNS::Subscription",
		"aws_sqs_queue":                           "AWS::SQS::Queue",
		"aws_ssm_parameter":                       "AWS::SSM::Parameter",
		"aws_subnet":                              "AWS::EC2::Subnet",
		"aws_swf_domain":                          "AWS::SWF::Domain",
		"aws_ec2_transit_gateway":                 "AWS::EC2::TransitGateway",
		"aws_ec2_transit_gateway_route_table":     "AWS::EC2::TransitGatewayRouteTable",
		"aws_ec2_transit_gateway_route":           "AWS::EC2::TransitGatewayRoute",
		"aws_ec2_transit_gateway_vpc_attachment":  "AWS::EC2::TransitGatewayAttachment",
		"aws_vpc":                                 "AWS::EC2::VPC",
		"aws_vpc_peering_connection":              "AWS::EC2::VPCPeeringConnection",
		"aws_vpn_connection":                      "AWS::EC2::VPNConnection",
		"aws_vpn_gateway":                         "AWS::EC2::VPNGateway",
		"aws_waf_byte_match_set":                  "AWS::WAF::ByteMatchSet",
		"aws_waf_geo_match_set":                   "AWS::WAF::GeoMatchSet",
		"aws_waf_ipset":                           "AWS::WAF::IPSet",
		"aws_waf_rate_based_rule":                 "AWS::WAF::RateBasedRule",
		"was_waf_regex_match_set":                 "AWS::WAF::RegexMatchSet",
		"aws_waf_regex_pattern_set":               "AWS::WAF::RegexPatternSet",
		"aws_waf_rule":                            "AWS::WAF::Rule",
		"aws_waf_rule_group":                      "AWS::WAF::RuleGroup",
		"aws_waf_size_constraint_set":             "AWS::WAF::SizeConstraintSet",
		"aws_waf_sql_injection_match_set":         "AWS::WAF::SqlInjectionMatchSet",
		"aws_waf_web_acl":                         "AWS::WAF::WebACL",
		"aws_waf_xss_match_set":                   "AWS::WAF::XssMatchSet",
		"aws_wafregional_byte_match_set":          "AWS::WAFRegional::ByteMatchSet",
		"aws_wafregional_geo_match_set":           "AWS::WAFRegional::GeoMatchSet",
		"aws_wafregional_ipset":                   "AWS::WAFRegional::IPSet",
		"aws_wafregional_rate_based_rule":         "AWS::WAFRegional::RateBasedRule",
		"aws_wafregional_regex_match_set":         "AWS::WAFRegional::RegexMatchSet",
		"aws_wafregional_regex_pattern_set":       "AWS::WAFRegional::RegexPatternSet",
		"aws_wafregional_rule":                    "AWS::WAFRegional::Rule",
		"aws_wafregional_rule_group":              "AWS::WAFRegional::RuleGroup",
		"aws_wafregional_size_constraint_set":     "AWS::WAFRegional::SizeConstraintSet",
		"aws_wafregional_sql_injection_match_set": "AWS::WAFRegional::SqlInjectionMatchSet",
		"aws_wafregional_web_acl":                 "AWS::WAFRegional::WebACL",
		"aws_wafregional_xss_match_set":           "AWS::WAFRegional::XssMatchSet",
		"aws_wafv2_ip_set":                        "AWS::WAFv2::IPSet",
		"aws_wafv2_regex_pattern_set":             "AWS::WAFv2::RegexPatternSet",
		"aws_wafv2_rule_group":                    "AWS::WAFv2::RuleGroup",
		"aws_wafv2_web_acl":                       "AWS::WAFv2::WebACL",
		"aws_wafv2_web_acl_association":           "AWS::WAFv2::WebACLAssociation",
		"aws_wafv2_web_acl_logging_configuration": "AWS::WAFv2::WebACLLoggingConfiguration",
		"aws_workspaces_directory":                "AWS::WorkSpaces::Directory",
		"aws_workspaces_ip_group":                 "AWS::WorkSpaces::IPGroup",
		"aws_workspaces_workspace":                "AWS::WorkSpaces::Workspace",
		"aws_xray_sampling_rule":                  "AWS::XRay::SamplingRule",
	}
}
